Copyright (C) 2014 Massachusetts Institute of Technology
This is free software; see the source for copying conditions. There is NO warranty; not
even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Image saved on Monday May 19, 2014 at 9:55:33 PM
  Release 9.2 || Microcode 15.1 || Runtime 15.7 || Win32 1.8 || SF 4.41 || LIAR/i386 4.118
  Edwin 3.116
;You are in an interaction window of the Edwin editor.
;Type `C-h' for help, or `C-h t' for a tutorial.
;`C-h m' will describe some commands.
;`C-h' means: hold down the Ctrl key and type `h'.
;Package: (user)

(define (average a b) (/ (+ a b) 2.0))
;Value: average

(define (sqrt-improve guess x) (average guess (/ x guess)))
;Value: sqrt-improve

(define (sqrt-stream x)
  (define (sqrt-guess-improve-stream guess x)
    (let (
	  (new_guess (sqrt-improve guess x))
	  )
      (cons-stream (sqrt-improve guess x) (sqrt-guess-improve-stream new_guess x))
      )
    )
  (sqrt-guess-improve-stream 1.0 x)
)
;Value: sqrt-stream

(define sqrt_3 (sqrt-stream 3))
;Value: sqrt_3

sqrt_3
;Value 13: (2. . #[promise 14])

(stream-cdr sqrt_3)
;Value 15: (1.75 . #[promise 16])

(stream-ref sqrt_3 5)
;Value: 1.7320508075688772

(stream-ref sqrt_3 9)
;Value: 1.7320508075688772

